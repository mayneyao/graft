FROM rust:1.85@sha256:e51d0265072d2d9d5d320f6a44dde6b9ef13653b035098febd68cce8fa7c0bc4 AS base

# install deps
RUN apt-get update && apt-get install -y clang libclang-dev llvm mold libncurses-dev build-essential && rm -rf /var/lib/apt/lists/*
RUN curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
RUN cargo binstall -y --version 0.1.71 cargo-chef
RUN cargo binstall -y --version 0.10.0 sccache
ENV RUSTC_WRAPPER=sccache SCCACHE_DIR=/sccache

# Build configuration
ENV RUSTFLAGS="-Ctarget-cpu=native -Clink-arg=-fuse-ld=mold"
ENV BUILDFLAGS="--release --features precept/disabled --bin metastore --bin pagestore"
ENV TARGET_DIR="target/release"

FROM base AS planner
WORKDIR /app
COPY . .
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=$SCCACHE_DIR,sharing=locked \
    cargo chef prepare --recipe-path recipe.json

FROM base AS builder
WORKDIR /app
COPY --from=planner /app/recipe.json recipe.json
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=$SCCACHE_DIR,sharing=locked \
    cargo chef cook ${BUILDFLAGS} --recipe-path recipe.json
COPY . .
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=$SCCACHE_DIR,sharing=locked \
    cargo build ${BUILDFLAGS}
RUN mv ${TARGET_DIR} /artifacts

FROM gcr.io/distroless/cc:debug@sha256:5ccfee06c7ddc5aebcb7c0907d7d5346175f640200e906777259031674e70a37 AS runtime

# Create a single image with both services
FROM runtime AS final
COPY --from=builder /artifacts/metastore /metastore
COPY --from=builder /artifacts/pagestore /pagestore
COPY ./deploy/metastore/metastore.toml /metastore.toml
COPY ./deploy/pagestore/pagestore.toml /pagestore.toml

# Create startup script
RUN echo '#!/bin/sh\n\
if [ "$SERVICE" = "metastore" ]; then\n\
  exec /metastore\n\
else\n\
  exec /pagestore\n\
fi' > /start.sh && chmod +x /start.sh

ENTRYPOINT ["/start.sh"] 